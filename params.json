{"name":"App-MiseEnPlace","body":"# DESCRIPTION\r\n\r\n`mise` is a simple script that allows you to manage directory and symlink\r\ncreation based on a global config as well as per-project configs.\r\n\r\n# SYNOPSIS\r\n\r\n    # in ~/.mise:\r\n    ---\r\n    manage:\r\n      - proj/*\r\n      - etc\r\n    create:\r\n      directories:\r\n        - bin\r\n        - doc\r\n        - etc\r\n        - lib\r\n        - proj\r\n        - src\r\n        - var/tmp\r\n      links:\r\n        - var/tmp: tmp\r\n\r\n\r\n\r\n    # in ~/proj/my-project/.mise\r\n    ---\r\n    create:\r\n      links:\r\n        bin/script: BIN\r\n        DIR: ~/my-project\r\n\r\n    # then run\r\n    mise -v\r\n\r\n    # output\r\n    '/home/user/bin' exists\r\n    '/home/user/doc' exists\r\n    '/home/user/etc' exists\r\n    '/home/user/lib' exists\r\n    '/home/user/proj' exists\r\n    Created '/home/user/src'\r\n    '/home/user/var/tmp' exists\r\n    Link from '/home/user/var/tmp' to '/home/user/tmp' exists\r\n    Created link from /home/user/proj/my-project/bin/script to /home/user/bin/script\r\n    Created link from /home/user/proj/my-project to /home/user/my-project\r\n\r\n# OPTIONS\r\n\r\nThe config file in the SYNOPSIS illustrates most of the available options.\r\n\r\n- bindir\r\n\r\nThe directory to be used for the expansion of the keyword 'BIN' when creating\r\nsymlinks. (See below.) Defaults to `$ENV{HOME}/bin`\r\n\r\n- manage\r\n\r\nThis is a list of directories in which to search for per-project config\r\nfiles. Directories that don't start with a '/' are assumed to be relative to\r\n$ENV{HOME} (i.e., 'foo' will be expanded to \"$ENV{HOME}/foo\"). Each line will\r\nbe globbed, so standard shell wildcards can be used.\r\n\r\nThis option is only valid in the \"top-level\" `~/.mise` config file; it will\r\nhave to effect if placed in a per-project config.\r\n\r\n- create/directories\r\n\r\nThis is a list of directories to create. Directories that don't start with a\r\n'/' are assumed to be relative to the directory containing the .mise\r\nfile. (I.e., `foo` in a `.mise` file located in `$ENV{HOME}/my/proj/` will\r\nbe expanded to `$ENV{HOME}/my/proj/foo`)\r\n\r\n- create/links\r\n\r\nThis is a list of symlinks to create, expressed as a series of source =>\r\ntarget pairs. Both the source and target will be expanded relative to the\r\ndirectory containing the `.mise` file, as explained above for\r\ncreate/directories. Additionally, if the target ends in a '/', the basename of\r\nthe source value will be appended (in much the same way the `ln -s` works.)\r\n\r\nFinally, there are a few keywords that can be used when creating links. If the\r\ntarget consists solely of the keyword 'BIN', the link will be created in the\r\ndirectory in the 'bindir' configuration variable, again using the basename of\r\nthe source. If the source consists solely of the keyword 'DIR', the link\r\nsource will be the directory containing the .mise file in question.\r\n\r\n# FLAGS\r\n\r\n- `--config/-C FILE`\r\n\r\nUse a different config file\r\n\r\n- `--remove-bin-links/-R`\r\n\r\nMakes `mise` remove any sylinks from the `bindir` after doing directory\r\ncreation and before doing symlink creation.\r\n\r\n- `--verbose/-v`\r\n\r\nMakes `mise` be very noisy about exactly what is going on.\r\n\r\n- `--version/-V`\r\n\r\nDisplays the version number and exits","tagline":"A place for everything and everything in its place","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}